{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"Stream List\"), this.props.streams.map(stream => {}));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //turnn stream object back to array, because it's easier to map over the array\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","render","streams","map","stream","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA8B,eAA9B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEK,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI,CAEjC,CAFA,CAFL,CADJ;AASH;;AAdoC;;AAiBzC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA,SAAO;AACHJ,IAAAA,OAAO,EAAEK,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACJ,OAApB;AADN,GAAP;AAGH,CALD;;AAOA,eAAeP,OAAO,CAACU,eAAD,EAAkB;AAACT,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams }  from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n    render() {\n        return (\n            <>\n                <div>Stream List</div>\n                {this.props.streams.map(stream => {\n                    \n                })}\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //turnn stream object back to array, because it's easier to map over the array\n    return {\n        streams: Object.values(state.streams)\n    }\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}