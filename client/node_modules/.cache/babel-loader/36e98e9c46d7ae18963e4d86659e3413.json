{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { Link } from 'react-router-dom';\n\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, this.props.stream.title), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, this.props.stream.title));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","streams","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,WAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAAvB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWK,MAAX,CAAkBC,KAAvB,CAFJ,CADJ;AAOH;;AAhBoC;;AAmBzC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,MAAM,EAAEG,KAAK,CAACC,OAAN,CAAcC,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\nimport { fetchStream }  from '../../actions';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n        if(!this.props.stream) {\n            return <div>Loading...</div>\n        }\n        return (\n            <div>\n                <h1>{this.props.stream.title}</h1>\n                <h1>{this.props.stream.title}</h1>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}