{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n  }\n\n  componentDidMount() {\n    //gapi - var available in window scope after linking Oauth library\n    //library is extremely lightweight and every functionality must be additionally loaded\n    //we load only functionality we will use\n    window.gapi.load('client:auth2', () => {\n      //initialize with our key\n      window.gapi.client.init({\n        clientId: '779770667112-u21la91tp5q28ikql3hcpnt2m4pibpvc.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        //when initialized get info and set to state is user authenticated or not\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(() => {});\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 51\n      }\n    }, \"Not sure if signned in\");else if (this.state.isSignedIn) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 47\n      }\n    }, \"Signed in\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, \"Not signed in\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAACC,MAAAA,UAAU,EAAE;AAAb,KAD6B;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV;AACA,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAACb,UAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AAAb,SAAd;AACA,aAAKJ,IAAL,CAAUV,UAAV,CAAqBe,MAArB,CAA4B,MAAI,CAE/B,CAFD;AAGH,OAVD;AAWH,KAbD;AAcH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,QAAG,KAAKjB,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP,CAAnC,KACK,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAC/B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACH;;AA9BoC;;AAiCzC,eAAenB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = {isSignedIn: null};\n    componentDidMount() {\n        //gapi - var available in window scope after linking Oauth library\n        //library is extremely lightweight and every functionality must be additionally loaded\n        //we load only functionality we will use\n        window.gapi.load('client:auth2', () => {\n            //initialize with our key\n            window.gapi.client.init({\n                clientId: '779770667112-u21la91tp5q28ikql3hcpnt2m4pibpvc.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                //when initialized get info and set to state is user authenticated or not\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({isSignedIn: this.auth.isSignedIn.get()});\n                this.auth.isSignedIn.listen(()=>{\n                    \n                })\n            });\n        });\n    }\n\n    renderAuthButton() {\n        if(this.state.isSignedIn === null) return <div>Not sure if signned in</div>\n        else if(this.state.isSignedIn) return <div>Signed in</div>\n        return <div>Not signed in</div>\n    }\n    \n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}