{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"text\"\n      }, input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    this.onSubmit = formValues => {\n      //redux-form passes all field values to our onSubmit handler\n      console.log(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      label: \"Enter Title\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }), errors[name] && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 39\n      }\n    }, \"errors\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      label: \"Enter Description\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.desription) {\n    errors.title = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","onSubmit","formValues","console","log","render","props","handleSubmit","errors","name","validate","title","desription","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAIvCC,WAJuC,GAIzB,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAoB;AAC9B,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,KAAR,CADJ,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ,SAAuBD,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADJ;AAOH,KAZsC;;AAAA,SAcvCE,QAduC,GAc3BC,UAAD,IAAgB;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAjBsC;AAAA;;AAmBvCG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC,aAA1B;AAAwC,MAAA,SAAS,EAAE,KAAKH,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKU,MAAM,CAACC,IAAD,CAAN,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFtB,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,KAAK,EAAC,mBAAhC;AAAoD,MAAA,SAAS,EAAE,KAAKX,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAFJ,CADJ;AAWH;;AA/BsC;;AAkC3C,MAAMY,QAAQ,GAAIR,UAAD,IAAgB;AAC7B,QAAMM,MAAM,GAAG,EAAf;;AACA,MAAG,CAACN,UAAU,CAACS,KAAf,EAAsB;AAClBH,IAAAA,MAAM,CAACG,KAAP,GAAe,wBAAf;AACH;;AACD,MAAG,CAACT,UAAU,CAACU,UAAf,EAA2B;AACvBJ,IAAAA,MAAM,CAACG,KAAP,GAAe,8BAAf;AACH;;AACD,SAAOH,MAAP;AACH,CATD;;AAWA,eAAeb,SAAS,CAAC;AACrBkB,EAAAA,IAAI,EAAE,cADe;AAErBH,EAAAA;AAFqB,CAAD,CAAT,CAGZd,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    // renderInput = (formProps) => <input type=\"text\" {...formProps.input} />\n\n    //input - comes from redux-form\n    renderInput = ({input, label}) => {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                {/* add all redux-form input props to our input component */}\n                <input type=\"text\" {...input} />\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        //redux-form passes all field values to our onSubmit handler\n        console.log(formValues);\n    }\n\n    render() {\n        return (\n            <div>\n                {/* this.props.handelSubmit - comes from redux-form, pass our callback */}\n                <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name='title' label=\"Enter Title\" component={this.renderInput} />\n                    {errors[name]  && <div>errors</div>}\n                    <Field name='description' label=\"Enter Description\" component={this.renderInput} />\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n} \n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.title) {\n        errors.title = \"You must enter a title\";\n    }\n    if(!formValues.desription) {\n        errors.title = \"You must enter a description\";\n    }\n    return errors;\n}\n\nexport default reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}