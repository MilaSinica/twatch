{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    //gapi - var available in window scope after linking Oauth library\n    //library is extremely lightweight and every functionality must be additionally loaded\n    //we load only functionality we will use\n    window.gapi.load('client:auth2', () => {\n      //initialize with our key\n      window.gapi.client.init({\n        clientId: '779770667112-u21la91tp5q28ikql3hcpnt2m4pibpvc.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        //when initialized get info and set to state is user authenticated or not\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange();\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) return null;else if (this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }), \"Sign Out\");\n    }\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui red google button\",\n      onClick: this.onSignInClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"google icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), \"Sign In\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","setState","auth","get","onSignInClick","signIn","onSignOutClick","signOut","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAACC,MAAAA,UAAU,EAAE;AAAb,KAD6B;;AAAA,SAoBrCC,YApBqC,GAoBtB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAACF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAb,OAAd;AACH,KAtBoC;;AAAA,SAwBrCC,aAxBqC,GAwBrB,MAAM;AAClB,WAAKF,IAAL,CAAUG,MAAV;AACH,KA1BoC;;AAAA,SA4BrCC,cA5BqC,GA4BpB,MAAM;AACnB,WAAKJ,IAAL,CAAUK,OAAV;AACH,KA9BoC;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV;AACA,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKlB,YAAL;AACA,aAAKE,IAAL,CAAUH,UAAV,CAAqBoB,MAArB,CAA4B,KAAKnB,YAAjC;AACH,OARD;AASH,KAXD;AAYH;;AAcDoB,EAAAA,gBAAgB,GAAG;AACf,QAAG,KAAKtB,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC,OAAO,IAAP,CAAnC,KACK,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAA0B;AAC3B,0BACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKO,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,aADJ;AAMH;AACD,wBACI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKF,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,YADJ;AAMH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACH;;AApDoC;;AAuDzC,eAAexB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = {isSignedIn: null};\n    componentDidMount() {\n        //gapi - var available in window scope after linking Oauth library\n        //library is extremely lightweight and every functionality must be additionally loaded\n        //we load only functionality we will use\n        window.gapi.load('client:auth2', () => {\n            //initialize with our key\n            window.gapi.client.init({\n                clientId: '779770667112-u21la91tp5q28ikql3hcpnt2m4pibpvc.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                //when initialized get info and set to state is user authenticated or not\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange();\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = () => {\n        this.setState({isSignedIn: this.auth.isSignedIn.get()});\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if(this.state.isSignedIn === null) return null;\n        else if(this.state.isSignedIn) {\n            return (\n                <button className=\"ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    Sign Out\n                </button>\n            )\n        }\n        return (\n            <button className=\"ui red google button\" onClick={this.onSignInClick}>\n                <i className=\"google icon\" />\n                Sign In\n            </button>\n        )\n    }\n    \n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}