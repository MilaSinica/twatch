{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formValues => {\n      this.props.editStream(formValues);\n    };\n\n    this.getInitialValues = () => {\n      return {\n        title: this.props.stream.title,\n        description: this.props.stream.description\n      };\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 39\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      onSubmit: this.handleSubmit,\n      initialValues: this.getInitialValues(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //turn stream object back to array, because it's easier to map over the array\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/twitch/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","handleSubmit","formValues","props","getInitialValues","title","stream","description","componentDidMount","match","params","id","render","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAyC,eAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAKpCC,YALoC,GAKrBC,UAAU,IAAI;AACzB,WAAKC,KAAL,CAAWN,UAAX,CAAsBK,UAAtB;AACH,KAPmC;;AAAA,SASpCE,gBAToC,GASjB,MAAM;AACrB,aAAO;AACHC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MAAX,CAAkBD,KADtB;AAEHE,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWG,MAAX,CAAkBC;AAF5B,OAAP;AAIH,KAdmC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAaDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKT,KAAL,CAAWG,MAAf,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAGI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKL,YAA3B;AAAyC,MAAA,aAAa,EAAE,KAAKG,gBAAL,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAzBmC;;AA6BxC,MAAMS,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA,SAAO;AACHT,IAAAA,MAAM,EAAEQ,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CALD;;AAOA,eAAehB,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream }  from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component{\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    handleSubmit = formValues => {\n        this.props.editStream(formValues);\n    }\n\n    getInitialValues = () => {\n        return {\n            title: this.props.stream.title,\n            description: this.props.stream.description\n        }\n    }\n\n    render() {\n        if(!this.props.stream) return <div>Loading...</div>\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                {/* initialValues special redux-form keyword*/}\n                <StreamForm onSubmit={this.handleSubmit} initialValues={this.getInitialValues()} />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //turn stream object back to array, because it's easier to map over the array\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}